---
- name: Deploy Mozio Django Project
  hosts: all
  become: yes

  vars:
    project_dir: /opt/mozio
    venv_dir: /opt/mozio/venv
    django_user: mozio
    django_port: 8000
    gunicorn_socket: /run/gunicorn.sock
    domain: yourdomain.com  # Change to your domain

  tasks:
    - name: Install system packages
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - python3-dev
          - build-essential
          - libpq-dev
          - postgresql
          - postgresql-contrib
          - postgis
          - nginx
          - git
          - curl
        update_cache: yes

    - name: Ensure project user exists
      user:
        name: "{{ django_user }}"
        system: yes
        create_home: yes

    - name: Clone project repo
      git:
        repo: 'https://github.com/rajeev-kl/mozio.git'
        dest: "{{ project_dir }}"
        version: master
        force: yes
        update: yes

    - name: Create virtualenv
      command: python3 -m venv {{ venv_dir }}
      args:
        creates: "{{ venv_dir }}/bin/activate"

    - name: Install pip requirements
      pip:
        requirements: "{{ project_dir }}/Pipfile"
        virtualenv: "{{ venv_dir }}"

    - name: Set up Gunicorn systemd service
      copy:
        dest: /etc/systemd/system/gunicorn.service
        content: |
          [Unit]
          Description=gunicorn daemon
          After=network.target

          [Service]
          User={{ django_user }}
          Group=www-data
          WorkingDirectory={{ project_dir }}/datasmith
          ExecStart={{ venv_dir }}/bin/gunicorn --access-logfile - --workers 3 --bind unix:{{ gunicorn_socket }} datasmith.wsgi:application

          [Install]
          WantedBy=multi-user.target

    - name: Start and enable Gunicorn
      systemd:
        name: gunicorn
        enabled: yes
        state: restarted
        daemon_reload: yes

    - name: Create self-signed SSL cert (for demo)
      openssl_certificate:
        path: "/etc/ssl/certs/{{ domain }}.crt"
        privatekey_path: "/etc/ssl/private/{{ domain }}.key"
        common_name: "{{ domain }}"
        provider: selfsigned

    - name: Configure Nginx
      copy:
        dest: /etc/nginx/sites-available/mozio
        content: |
          server {
              listen 80;
              server_name {{ domain }};
              return 301 https://$host$request_uri;
          }
          server {
              listen 443 ssl;
              server_name {{ domain }};

              ssl_certificate /etc/ssl/certs/{{ domain }}.crt;
              ssl_certificate_key /etc/ssl/private/{{ domain }}.key;

              location = /favicon.ico { access_log off; log_not_found off; }
              location /static/ {
                  root {{ project_dir }}/datasmith;
              }
              location / {
                  include proxy_params;
                  proxy_pass http://unix:{{ gunicorn_socket }};
              }
          }

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/mozio
        dest: /etc/nginx/sites-enabled/mozio
        state: link
        force: yes

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted